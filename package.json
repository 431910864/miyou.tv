{
  "name": "miyoutv",
  "description": "MiyouTV",
  "version": "0.9.0",
  "author": {
    "name": "takaaki, Brazil Ltd.",
    "url": "http://razil.jp/"
  },
  "bugs": "https://github.com/search-future/miyou.tv/issues",
  "dependencies": {
    "7zip-bin": "^2.2.3",
    "ag-grid": "~13.0.2",
    "angular": "^1.6.6",
    "angular-animate": "^1.6.6",
    "angular-bootstrap-contextmenu": "^0.9.9",
    "angular-hotkeys": "^1.7.0",
    "angular-loading-bar": "^0.9.0",
    "angular-md5": "^0.1.10",
    "angular-route": "^1.6.6",
    "angular-ui-bootstrap": "^2.5.0",
    "angularjs-toaster": "^2.2.0",
    "bootstrap": "^3.3.7",
    "font-awesome": "^4.7.0",
    "fs-extra": "^4.0.2",
    "jquery": "^3.2.1",
    "typeface-roboto": "0.0.35",
    "webgl-video-renderer": "^0.2.0"
  },
  "devDependencies": {
    "@types/angular": "^1.6.32",
    "@types/angular-animate": "^1.5.8",
    "@types/angular-hotkeys": "0.0.34",
    "@types/angular-loading-bar": "0.0.32",
    "@types/angular-route": "^1.3.4",
    "@types/angular-ui-bootstrap": "^0.13.44",
    "@types/bootstrap": "^3.3.36",
    "@types/electron": "~1.4.38",
    "@types/fs-extra": "^4.0.2",
    "@types/jquery": "^3.2.12",
    "@types/ngtoaster": "^0.4.19",
    "@types/webpack": "^3.0.10",
    "awesome-typescript-loader": "^3.2.3",
    "concurrently": "^3.5.0",
    "cpx": "^1.5.0",
    "cross-conf-env": "^1.1.2",
    "css-loader": "^0.28.7",
    "electron-builder": "^19.28.4",
    "electron-reload": "^1.2.1",
    "env-cmd": "^5.1.0",
    "eslint": "^4.6.1",
    "eslint-config-airbnb-base": "^12.0.0",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-node": "^5.1.1",
    "extract-text-webpack-plugin": "^3.0.0",
    "file-loader": "^0.11.2",
    "glob": "^7.1.2",
    "json": "^9.0.6",
    "postcss": "^6.0.11",
    "postcss-discard-font-face": "^3.0.0",
    "postcss-loader": "^2.0.6",
    "rimraf": "^2.6.1",
    "stylelint": "^8.1.1",
    "stylelint-config-standard": "^17.0.0",
    "tar.gz": "^1.0.5",
    "tslint": "^5.7.0",
    "tslint-config-airbnb": "^5.2.1",
    "typeface-notosans-jp": "^1.0.1",
    "typescript": "^2.5.2",
    "uglify-js": "^3.1.0",
    "uglifyjs-webpack-plugin": "^0.4.6",
    "webpack": "^3.5.6"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "http://miyou.tv/",
  "keywords": [
    "chinachu",
    "dtv",
    "dvr",
    "mirakurun",
    "miyoutv",
    "tv"
  ],
  "license": "Apache-2.0",
  "main": "miyoutv/dist/index.js",
  "optionalDependencies": {
    "electron": "^1.4.13",
    "electron-prebuilt": "^0.36.0",
    "wcjs-prebuilt": "^3.0.0",
    "webchimera.js": "^0.2.7"
  },
  "productName": "MiyouTV",
  "repository": "https://github.com/search-future/miyou.tv",
  "scripts": {
    "build": "env-cmd .env.local concurrently \"npm run build:js\" \"npm run build:bundle\" \"npm run build:resource\"",
    "build-agent": "env-cmd .env.local concurrently \"npm run build-agent:js\" \"npm run build-agent:resource\"",
    "build-agent:js": "webpack --env.agent",
    "build-agent:resource": "cpx \"miyoutv-agent/**/!(src|*.js)\" build/miyoutv-agent/",
    "build:js": "webpack --env.miyoutv --env.js",
    "build:bundle": "webpack --env.miyoutv --env.bundle",
    "build:resource": "cpx \"miyoutv/src/**/!(app|*.js|*.ts|package*.json|bundle.*)\" miyoutv/dist/",
    "clean": "rimraf miyoutv/dist/ \"build/miyoutv-*(agent|linux32|linux64|mac|win32|win64)\"",
    "dist": "env-cmd pack.env.js cross-conf-env npm run dist:%npm_config_pack_type%",
    "dist-agent": "cross-conf-env targz c build/miyoutv-agent/ build/miyoutv-agent-%npm_package_version%.tar.gz",
    "dist:linux32": "env-cmd pack-linux.env build --linux --ia32 --project build/miyoutv-linux32/",
    "dist:linux32:config": "cat miyoutv/src/package.json miyoutv/src/package-linux.json | json --deep-merge > build/miyoutv-linux32/package.json",
    "dist:linux32:copy": "cpx \"miyoutv/dist/**/!(miyoutv.icns)\" build/miyoutv-linux32/",
    "dist:linux64": "env-cmd pack-linux.env build --linux --x64 --project build/miyoutv-linux64/",
    "dist:linux64:config": "cat miyoutv/src/package.json miyoutv/src/package-linux.json | json --deep-merge > build/miyoutv-linux64/package.json",
    "dist:linux64:copy": "cpx \"miyoutv/dist/**/!(miyoutv.icns)\" build/miyoutv-linux64/",
    "dist:mac": "env-cmd pack-mac.env build --mac --x64 --project  build/miyoutv-mac/",
    "dist:mac:config": "cat miyoutv/src/package.json miyoutv/src/package-mac.json | json --deep-merge > build/miyoutv-mac/package.json",
    "dist:mac:copy": "cpx \"miyoutv/dist/**/!(install.sh|miyoutv.iconset)\" build/miyoutv-mac/",
    "dist:mac:install": "env-cmd pack-mac.env npm install --prefix build/miyoutv-mac/",
    "dist:win32": "env-cmd pack-win32.env build --win --ia32 --project build/miyoutv-win32/",
    "dist:win32:config": "cat miyoutv/src/package.json miyoutv/src/package-win.json | json --deep-merge > build/miyoutv-win32/package.json",
    "dist:win32:copy": "cpx \"miyoutv/dist/**/!(install.sh|miyoutv.icns|miyoutv.iconset)\" build/miyoutv-win32/",
    "dist:win64": "env-cmd pack-win64.env build --win --x64 --project build/miyoutv-win64/",
    "dist:win64:config": "cat miyoutv/src/package.json miyoutv/src/package-win.json | json --deep-merge > build/miyoutv-win64/package.json",
    "dist:win64:copy": "cpx \"miyoutv/dist/**/!(install.sh|miyoutv.icns|miyoutv.iconset)\" build/miyoutv-win64/",
    "pack": "env-cmd pack.env.js cross-conf-env npm run pack:%npm_config_pack_type%",
    "pack-agent": "npm run build-agent",
    "pack:linux32": "npm run dist:linux32 -- --dir",
    "pack:linux64": "npm run dist:linux64 -- --dir",
    "pack:mac": "npm run dist:mac -- --dir",
    "pack:win32": "npm run dist:win32 -- --dir",
    "pack:win64": "npm run dist:win64 -- --dir",
    "predist:linux32": "env-cmd pack-linux.env npm run build && npm run dist:linux32:copy && npm run dist:linux32:config",
    "predist:linux64": "env-cmd pack-linux.env npm run build && npm run dist:linux64:copy && npm run dist:linux64:config",
    "predist:mac": "env-cmd pack-mac.env npm run build && npm run dist:mac:copy && npm run dist:mac:config && npm run dist:mac:install",
    "predist:win32": "env-cmd pack-win32.env npm run build && npm run dist:win32:copy && npm run dist:win32:config",
    "predist:win64": "env-cmd pack-win64.env npm run build && npm run dist:win64:copy && npm run dist:win64:config",
    "start": "env-cmd .env.local electron ./",
    "test": "tslint ./",
    "watch": "env-cmd .env.local concurrently \"npm run watch:js\" \"npm run watch:bundle\" \"npm run watch:resource\"",
    "watch:js": "npm run build:js -- -w",
    "watch:bundle": "npm run build:bundle -- -w",
    "watch:resource": "npm run build:resource -- -w"
  }
}
